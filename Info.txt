
https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/#deploying-the-dashboard-ui

Deploying the Dashboard UI:
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml

Command line proxy:
kubectl proxy

Dashboard Local-host url:
http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/overview?namespace=default

HowToSetUpKubernetesOnWindows10WithDockerForWindowsAndRunASPNETCore
https://www.hanselman.com/blog/HowToSetUpKubernetesOnWindows10WithDockerForWindowsAndRunASPNETCore.aspx

eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJ0dGwtY29udHJvbGxlci10b2tlbi1nOXA3ayIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJ0dGwtY29udHJvbGxlciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImJiNjQ3MjZjLTljOTUtMTFlOS1iOGMyLTAwMTU1ZDAzNTQwMyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTp0dGwtY29udHJvbGxlciJ9.Znxq4jQ0xwAHhE-pONnooyuW1FIPqbfXm-0fq8um35JGjhlB33Z56pM9tNkwO-Jpwo55DFXHYCJNcLpKudxZDsCM3yjBMR9ZJ8p5c9wr8LjQIWr8zGhHzf3Mn-9ulc-2YOTZqIPT_czNhfEnYnoJCHzEau4Xqcfe-6KjnFaS1xR99N26J0NOIZZeK5Z9clwfdiKOXBVDMjAREXYjdUhfvuI9NjWwzDRK8cYeDa4iyottnvdiQeTgrPU8NkkiI07gp_I45_GrRVU7cTM8U6xcqkHEe3xTBqbg99joduIJUn1ej3kU4jZGYUdaY0GRKuZlbNFd2y_X29MxGNBTI6fJdw



How Deployment, Service & Ingress are Related in Kubernetes Manifest?:
https://medium.com/@dwdraju/how-deployment-service-ingress-are-related-in-their-manifest-a2e553cf0ffb

Deleting Helm release (everything):
helm del --purge clusv1

>>>>>>>>>>>>helm template chartname>>>>>>>>>>>>
PS D:\Vatan\SiemensTFS\CloudServices\ClusterFit\Feat\ClusterFit_k8s\Deployment> helm template --help

Render chart templates locally and display the output.

This does not require Tiller. However, any values that would normally be
looked up or retrieved in-cluster will be faked locally. Additionally, none
of the server-side testing of chart validity (e.g. whether an API is supported)
is done.

To render just one template in a chart, use '-x':

        $ helm template mychart -x templates/deployment.yaml

Usage:
  helm template [flags] CHART

Flags:
  -x, --execute stringArray      only execute the given templates
  -h, --help                     help for template
      --is-upgrade               set .Release.IsUpgrade instead of .Release.IsInstall
      --kube-version string      kubernetes version used as Capabilities.KubeVersion.Major/Minor (default "1.9")
  -n, --name string              release name (default "release-name")
      --name-template string     specify template used to name the release
      --namespace string         namespace to install the release into
      --notes                    show the computed NOTES.txt file as well
      --output-dir string        writes the executed templates to files in output-dir instead of stdout
      --set stringArray          set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
      --set-file stringArray     set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)
      --set-string stringArray   set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)
  -f, --values valueFiles        specify values in a YAML file (can specify multiple) (default [])

Global Flags:
      --debug                           enable verbose output
      --home string                     location of your Helm config. Overrides $HELM_HOME (default "C:\\Users\\z003d4ks\\.helm")
      --host string                     address of Tiller. Overrides $HELM_HOST
      --kube-context string             name of the kubeconfig context to use
      --kubeconfig string               absolute path to the kubeconfig file to use
      --tiller-connection-timeout int   the duration (in seconds) Helm will wait to establish a connection to tiller (default 300)
      --tiller-namespace string         namespace of Tiller (default "kube-system")
      
      >>>>>>>>>>>>>>>>END<<<<<<<<<<<<<<<<<<<
